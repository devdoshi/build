name: Continuous integration

on:
  push:
    branches:
      - main

jobs:

  build:
    name: Build ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: x86_64-pc-windows-gnu
            os: windows-latest
            file: surreal-${{ github.ref_name }}.windows-amd64
    runs-on: ${{ matrix.os }}
    steps:

      - name: Cache cargo assets
        uses: pat-s/always-upload-cache@v3.0.1
        with:
          path: |
            /vcpkg/
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.arch }}-build-cargo-test
          
      - name: Install dependencies
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          vcpkg integrate install
          vcpkg install openssl:x64-windows-static
          choco install --allow-empty-checksums pkgconfiglite
          cd C:\vcpkg\installed
          ls
          cd C:\vcpkg\installed\x64-windows-static
          ls
          cd C:\vcpkg\packages\openssl_x64-windows-static
          ls
          cd C:\vcpkg\packages\openssl_x64-windows-static\lib
          ls
          cd C:\vcpkg\packages\openssl_x64-windows-static\include
          ls
                
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          repository: 'surrealdb/surrealdb'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.arch }}

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          OPENSSL_STATIC: true
          OPENSSL_NO_VENDOR: true
          OPENSSL_DIR: C:\vcpkg\installed\x64-windows-static
          OPENSSL_LIB_DIR: C:\vcpkg\installed\x64-windows-static\lib
          OPENSSL_INCLUDE_DIR: C:\vcpkg\installed\x64-windows-static\include
        with:
          command: build
          args: --release --locked --target ${{ matrix.arch }}
      
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-2
          aws-access-key-id: ${{ secrets.AMAZON_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AMAZON_SECRET_KEY }}

      - name: Package binaries
        shell: bash
        run: |
          cd target/${{ matrix.arch }}/release
          cp surreal.exe ${{ matrix.file }}.exe
          echo $(shasum -a 256 ${{ matrix.file }}.exe | cut -f1 -d' ') > ${{ matrix.file }}.txt
          aws s3 cp --cache-control 'no-store' ${{ matrix.file }}.exe s3://download.surrealdb.com/${{ github.ref_name }}/
          aws s3 cp --cache-control 'no-store' ${{ matrix.file }}.txt s3://download.surrealdb.com/${{ github.ref_name }}/
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.file }}
          path: |
            target/${{ matrix.arch }}/release/surreal
            target/${{ matrix.arch }}/release/${{ matrix.file }}.tgz
            target/${{ matrix.arch }}/release/${{ matrix.file }}.txt
            target/${{ matrix.arch }}/release/${{ matrix.file }}.exe
